version: '3.8'

services:
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      # As variáveis são carregadas do arquivo .env
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      # Mapeia o script de inicialização para o diretório de entrada do MySQL
      - ./init/mysql/init_script.sql:/docker-entrypoint-initdb.d/init_script.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  postgres_db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      # Mapeia o script de inicialização para o diretório de entrada do PostgreSQL
      - ./init/postgres/init_script.sql:/docker-entrypoint-initdb.d/init_script.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  sqlserver_db:
    # SQL Server no Linux
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver_db
    environment:
      SA_PASSWORD: ${SA_PASSWORD}
      ACCEPT_EULA: ${ACCEPT_EULA}
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - ./init/sqlserver/init_script.sql:/usr/config/init_script.sql
      - ./init/sqlserver/setup.sh:/usr/config/setup.sh
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P '${SA_PASSWORD}' -Q 'SELECT 1'"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    command: >
      bash -c "
      /opt/mssql/bin/sqlservr &
      chmod +x /usr/config/setup.sh &&
      /usr/config/setup.sh &&
      wait
      "

volumes:
  mysql_data:
  postgres_data:
  sqlserver_data: